version: '3.9'

services:
  qbit:
    image: ghcr.io/binhex/arch-qbittorrentvpn:latest
    ports:
      - 51413:51413
      - 51413:51413/udp
      - 6881:6881
      - 6881:6881/udp
      - 8118:8118
      - ${QBITTORRENTVPN_PORT_8080}:${QBITTORRENTVPN_PORT_8080}
    hostname: ${DOCKERHOSTNAME}
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    container_name: qbit
    environment:
      - ENABLE_PRIVOXY=${QBITTORRENTVPN_ENABLE_PRIVOXY}
      - LAN_NETWORK=${LAN_NETWORK}
      - NAME_SERVERS=${NS1},${NS2}
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - STRICT_PORT_FORWARD=yes
      - VPN_INPUT_PORTS=1234
      - VPN_OUTPUT_PORTS=5678
      - DEBUG=true
      - UMASK=000
      - VPN_CLIENT=${VPN_CLIENT}
      - VPN_ENABLED=${VPN_ENABLE}
      - VPN_OPTIONS=${VPN_OPTIONS}
      - VPN_PASS=${VPN_PASS}
      - VPN_PROV=${VPN_PROV}
      - VPN_USER=${VPN_USER}
      - WEBUI_PORT=${QBITTORRENTVPN_PORT_8080}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    privileged: true
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: "unless-stopped" 
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_CONF_DIR}/qbittorrentvpn:/config
      - ${HOST_DATA_DIR}/torrents:${CONTAINER_DATA_DIR}/torrents
      # - ${DOCKERSTORAGEDIR}:/storage
      - ${VPN_OVPNDIR}:/config/openvpn
      - ${VPN_WGDIR}:/config/wireguard
    networks:
      - media
    labels:
      com.dockstarter.appinfo.deprecated: "false"
      com.dockstarter.appinfo.description: "qBittorrent, OpenVPN and Privoxy"
      com.dockstarter.appinfo.nicename: "qBittorrentVPN"
  sab:
    image: ghcr.io/binhex/arch-sabnzbdvpn:latest
    ports:
      - 8090:8090
      - 8091:8080
      - ${SAB_PORT_8118}:8118
    hostname: ${DOCKERHOSTNAME}
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    container_name: sab
    environment:
      - ENABLE_PRIVOXY=${SAB_ENABLE_PRIVOXY}
      - LAN_NETWORK=${LAN_NETWORK}
      - NAME_SERVERS=${NS1},${NS2}
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - STRICT_PORT_FORWARD=yes
      - VPN_INPUT_PORTS=1234
      - VPN_OUTPUT_PORTS=5678
      - DEBUG=true
      - UMASK=000
      - VPN_CLIENT=${VPN_CLIENT}
      - VPN_ENABLED=no
      - VPN_OPTIONS=${VPN_OPTIONS}
      - VPN_PASS=${VPN_PASS}
      - VPN_PROV=${VPN_PROV}
      - VPN_USER=${VPN_USER}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    privileged: true
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: "unless-stopped" 
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_CONF_DIR}/sabnzbdvpn:/config
      - ${HOST_DATA_DIR}/usenet:${CONTAINER_DATA_DIR}/usenet
      - ${VPN_OVPNDIR}:/config/openvpn
      - ${VPN_WGDIR}:/config/wireguard
    networks:
      - media
  media-nginx:
    image: nginx:latest
    container_name: media-nginx
    ports:
      - ${QBITTORRENTVPN_PROXY_PORT}:${QBITTORRENTVPN_PORT_8080}
      - ${SAB_PROXY_PORT}:${SAB_PORT_8080}
      # - ${PLEX_WEB_PORT}:${PLEX_WEB_PORT}
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/nginx.conf.template
    restart: unless-stopped
    environment:
      QBITTORRENTVPN_PORT_8080: ${QBITTORRENTVPN_PORT_8080}
      SAB_PORT_8080: ${SAB_PORT_8080}
      PLEX_WEB_PORT: ${PLEX_WEB_PORT}
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".template"
    networks:
      - media
  # jellyfin:
  #   image: lscr.io/linuxserver/jellyfin:latest
  #   container_name: jellyfin
  #   ports:
  #     - 8096:8096
  #     - 8920:8920
  #   hostname: ${DOCKERHOSTNAME}
  #   devices:
  #     - "/dev/dri:/dev/dri"
  #   environment:
  #     - PGID=${PGID}
  #     - PUID=${PUID}
  #     - TZ=${TZ}
  #   logging:
  #     driver: json-file
  #     options:
  #       max-file: ${DOCKERLOGGING_MAXFILE}
  #       max-size: ${DOCKERLOGGING_MAXSIZE}
  #   restart: unless-stopped 
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${HOST_CONF_DIR}/jellyfin:/config
  #     - ${HOST_DATA_DIR}/media:/data/media
  #     # - ${DOCKERSTORAGEDIR}:/storage
  #     # - ${DOCKERSTORAGEDIR}/transcode:/transcode
  #   networks:
  #     - media
  plex:
    container_name: plex
    image: lscr.io/linuxserver/plex:latest
    ports:
      - 1900:1900/udp
      - 3005:3005
      - ${PLEX_WEB_PORT}:32400
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469
      - 33400:33400
      - 8324:8324
    devices:
      - "/dev/dri:/dev/dri"
    hostname: ${DOCKERHOSTNAME}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - PLEX_CLAIM="https://plex.tv/claim"
      - VERSION="docker"
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: "unless-stopped" 
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_CONF_DIR}/plex:/config
      - ${HOST_DATA_DIR}/media:/data/media
      # - ${DOCKERSTORAGEDIR}:/storage
      # - ${DOCKERSTORAGEDIR}/tv:/tv
      # - ${DOCKERSTORAGEDIR}/movies:/movies
    networks:
      - media
    labels:
      com.dockstarter.appinfo.deprecated: "false"
      com.dockstarter.appinfo.description: "Organizes all of your video, music and photo collections"
      com.dockstarter.appinfo.nicename: "Plex"
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    ports:
      - 7878:7878
    hostname: ${DOCKERHOSTNAME}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: "unless-stopped" 
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_CONF_DIR}/radarr:/config
      - ${HOST_DATA_DIR}:${CONTAINER_DATA_DIR}
      # - ${DOCKERSTORAGEDIR}:/storage
    networks:
      - media
    labels:
      com.dockstarter.appinfo.deprecated: "false"
      com.dockstarter.appinfo.description: "Automatically download movies via Usenet and BitTorrent"
      com.dockstarter.appinfo.nicename: "Radarr"
  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    ports:
      - 8989:8989
    hostname: ${DOCKERHOSTNAME}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: "unless-stopped" 
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_CONF_DIR}/sonarr:/config
      - ${HOST_DATA_DIR}:${CONTAINER_DATA_DIR}
      # - ${DOCKERSTORAGEDIR}:/storage
    networks:
      - media
    labels:
      com.dockstarter.appinfo.deprecated: "false"
      com.dockstarter.appinfo.description: "Smart TV show PVR via Usenet and BitTorrent"
      com.dockstarter.appinfo.nicename: "Sonarr"
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    ports:
      - 9696:9696
    hostname: ${DOCKERHOSTNAME}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: "unless-stopped" 
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_CONF_DIR}/prowlarr:/config
      - ${HOST_DATA_DIR}:${CONTAINER_DATA_DIR}
      # - ${DOCKERSTORAGEDIR}:/storage
    networks:
      - media
    labels:
      com.dockstarter.appinfo.deprecated: "false"
      com.dockstarter.appinfo.description: "Indexer manager/proxy to integrate with your various PVR apps."
      com.dockstarter.appinfo.nicename: "Prowlarr"
  overseerr:
    container_name: overseerr
    image: lscr.io/linuxserver/overseerr:latest
    ports:
      - 5055:5055
    hostname: ${DOCKERHOSTNAME}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_CONF_DIR}/overseerr:/config
      - ${HOST_DATA_DIR}:${CONTAINER_DATA_DIR}
      # - ${DOCKERSTORAGEDIR}:/storage
    networks:
      - media
  # jellyseerr:
  #   container_name: jellyseerr
  #   image: fallenbagel/jellyseerr
  #   ports:
  #     - 5055:5055
  #   hostname: ${DOCKERHOSTNAME}
  #   environment:
  #     - PGID=${PGID}
  #     - PUID=${PUID}
  #     - TZ=${TZ}
  #   logging:
  #     driver: json-file
  #     options:
  #       max-file: ${DOCKERLOGGING_MAXFILE}
  #       max-size: ${DOCKERLOGGING_MAXSIZE}
  #   restart: unless-stopped
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${HOST_CONF_DIR}/jellyseerr:/app/config
  #     - ${HOST_DATA_DIR}:${CONTAINER_DATA_DIR}
  #     # - ${DOCKERSTORAGEDIR}:/storage
  #   networks:
  #     - media
  readarr:
    container_name: readarr
    image: lscr.io/linuxserver/readarr:develop
    ports:
      - 8787:8787
    hostname: ${DOCKERHOSTNAME}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: "unless-stopped" 
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_CONF_DIR}/readarr:/config
      - ${HOST_DATA_DIR}:${CONTAINER_DATA_DIR}
      # - ${DOCKERSTORAGEDIR}:/storage
    networks:
      - media
    labels:
      com.dockstarter.appinfo.deprecated: "false"
      com.dockstarter.appinfo.description: "eBook and audiobook collection manager for Usenet and BitTorrent users."
      com.dockstarter.appinfo.nicename: "Readarr"
  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest 
    ports:
      - 6767:6767
    hostname: ${DOCKERHOSTNAME}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: "unless-stopped" 
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_CONF_DIR}/bazarr:/config
      - ${HOST_DATA_DIR}/media:${CONTAINER_DATA_DIR}/media
    networks:
      - media
  requestrr:
    container_name: requestrr
    image: thomst08/requestrr
    ports:
      - 4545:4545
    hostname: ${DOCKERHOSTNAME}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: "unless-stopped" 
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_CONF_DIR}/requestrr:/root/config
      - ${HOST_DATA_DIR}:${CONTAINER_DATA_DIR}
      # - ${DOCKERSTORAGEDIR}:/storage
    networks:
      - media
    labels:
      com.dockstarter.appinfo.deprecated: "true"
      com.dockstarter.appinfo.description: "(DEPRECATED) Use Doplarr"
      com.dockstarter.appinfo.nicename: "Requestrr"
  wizarr:
    container_name: wizarr
    image: ghcr.io/wizarrrr/wizarr
    ports:
      - 5690:5690
    hostname: ${DOCKERHOSTNAME}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: "unless-stopped" 
    volumes:
      - ${HOST_CONF_DIR}/wizarr:/data/database
    networks:
      - media
  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    ports:
      - 8191:8191
    hostname: ${DOCKERHOSTNAME}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - LOG_LEVEL=info
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: "unless-stopped" 
    networks:
      - media
  # bazaar:
  # tdarr:


networks:
  media:

# volumes:
#   # static should probably be anon so we can recreate it easily
#   static_volume:
#   media_volume: